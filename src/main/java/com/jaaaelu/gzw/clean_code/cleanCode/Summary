1.我们总想着烂代码有朝一日再回头清理，但是稍后等于永不！
              2.制造混乱无助于赶上期限。混乱只会立刻拖慢你，叫你错过期限。
              3.赶上期限的唯一方法——做得快的唯一方法——就是尽可能保存代码整洁。
              4."我喜欢优雅和高效的代码。代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误
              处理代码；性能调至最优，省得引诱别人做没规矩的优化，搞出一堆混乱出来。整洁的代码制作好一件事。"——读起来应该是令人愉悦的。
              5.糟糕的代码引发混乱。敷衍了事的错误处理代码只是程序员忽视细节的一种表现。
              6.糟糕的代码想做太多事，它意图混乱、目的含混。整洁的代码力求集合中。
              7.代码应当讲述事实，不引人猜测。它只该包含必需之物。
              8.代码作者什么都想到了，如果你企图改进它，总会回到原点。
              9.能通过所有测试；没有重复代码；体现系统中的全部设计理念；包括尽量少的实体，比如类、方法、函数。
              10.如果对象功能太多，最好切分为两个或多个对象。如果方法功能过多，我总能使用抽取手段重构之，从而得到一个能较为清晰地说明
              自身功能的方法，以及另外数个说明如何实现这个功能的方法。
              11.消除重复和提高表达力。