package com.jaaaelu.gzw.clean_code.errorHandling;

public class Eh7_0__7_4 {
    //  7.0 错误处理

    //  错误处理的意义在于，当错误发生时，程序员有责任确保代码照常运行

    //  错误处理很重要，但如果它搞乱了代码逻辑，就是错误的做法

    //  7.1 使用异常而非返回错误码

    //  7.2 先写 Try - Catch - Finally

    //  异常的妙处之一是，它们在程序中定义了一个范围。执行 try - catch - finally 语句中的 try 部分代码时，你是在表明可随
    //  时取消执行，并在 catch 语句中继续

    //  7.3 使用不可控异常

    //  如果你在方法中抛出可控异常，而 catch 语句在三个层级之上，你就得在 catch 语句和抛出异常之间的每个方法签名中声明该
    //  异常，这意味着对软件中较低层级的修改，都将会波及较高层级的签名

    //  7.4 给出异常发生的环境说明

    //  应创建信息充分的错误信息， 并和异常一起传递出去
}
